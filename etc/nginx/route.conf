        
	location = /healthz  {
                # MIME type determined by default_type:
                default_type 'text/plain';
                content_by_lua_block {
                        ngx.say( "OK" )
                }
        }

        location = /node {
		# MIME type determined by default_type:
                default_type 'text/plain';
		content_by_lua_block {
     			ngx.say( os.getenv("NODE_NAME") )
 		}			
        }
	
        location = /websockify {
		set $jwt_token          $args;
		if ($arg_jwt_token) {
       			set $jwt_token $arg_jwt_token;
    		}
		proxy_read_timeout 	3600s;       #  one hour
		proxy_send_timeout 	3600s;       #  one hour
		include    		ws.conf;
        	proxy_pass 		http://$target:$ws_tcp_bridge_tcp_port/;
	}
	
        location = /console {
                include proxy.conf;
                proxy_pass http://$my_console/;
        }

        location /console {
                include proxy.conf;
                rewrite ^/console(/.*)$ $1 break;
                proxy_pass http://$my_console;
                break;
        }


	location = /signalling {
		set $jwt_token          $args;
		if ($arg_jwt_token) {
       			set $jwt_token $arg_jwt_token;
    		}
		proxy_read_timeout 	3600s;       #  one hour
		proxy_send_timeout 	3600s;       #  one hour
		include    		ws.conf;
        	proxy_pass 		http://$target:$signalling_service_tcp_port/;
	}

        # format /container/$JWT_TOKEN/$PORT/foo/bar.html
        location ~ /container/([^/]+)/([0-9]+)/(.*) {
		set $jwt_token          $1;     # jwt contains the encrypted ip address
                set $port               $2;     # target tcp port to reach
		set $container_url	$3;	# foo/bar.html
                set $target             '';     # set default value
                rewrite_by_lua_file     /etc/nginx/get.targetmap.lua;
                include                 proxy.conf;
		rewrite    		^/container/([^/]+)/([0-9]+)/(.*)$ /$3 break;
                proxy_pass              http://$target:$port;
        }

	# same as previous but without a / at the end
	# format /container/$JWT_TOKEN/$PORT
        location ~ /container/([^/]+)/([0-9]+) {
		set $jwt_token          $1;     # jwt contains the encrypted ip address
                set $port               $2;     # target tcp port to reach
                set $target             '';     # set default value
                rewrite_by_lua_file     /etc/nginx/get.targetmap.lua;
                include                 proxy.conf;
                proxy_pass              http://$target:$port/;
        }


	# format /container/$PORT
        location ~ /container/([0-9]+)$ {
                set $port               $1; # target tcp port to reach
		set $jwt_token          $http_abcauthorization;
                rewrite_by_lua_file     /etc/nginx/get.targetmap.lua;
                include                 proxy.conf;
                proxy_pass              http://$target:$port;
        }


        location /spawner {
		client_max_body_size 	8M; # size of application including images data for generateddesktopfile call 
		set $jwt_token          $http_abcauthorization;
                rewrite_by_lua_file 	/etc/nginx/get.targetmap.lua;
		include    		proxy.conf;
                proxy_pass 		http://$target:$spawner_service_tcp_port;
        }

        location / {
		proxy_pass http://$my_website;
        }

	location /mimetypes {
		expires    modified +24h;
		try_files $uri /mimetypes/application-octet-stream.svg;
	}

	location /terminals/ {
                proxy_read_timeout 1800s;       # half one hour
                proxy_send_timeout 1800s;       # half one hour
                set $jwt_token          $args;
                include    ws.conf;
                proxy_pass http://$target:$xterm_tcp_port;
		break;
        }

        location ~ /terminals/(.*)/size {
                set $jwt_token          $http_abcauthorization;
                rewrite_by_lua_file    /etc/nginx/get.targetmap.lua;
                proxy_pass             http://$target:$xterm_tcp_port;
		break;
        }

        location /terminals {
                # rewrite_by_lua_file /etc/nginx/get.targetmap.lua;
                # rewrite ^/terminals(/.*)$ $1 break;
                set $jwt_token          $http_abcauthorization;
                rewrite_by_lua_file    /etc/nginx/get.targetmap.lua;
                proxy_pass             http://$target:$xterm_tcp_port;
		break;
        }

	location /filer {
		set $jwt_token          $http_abcauthorization;
		rewrite_by_lua_file /etc/nginx/get.targetmap.lua;
		client_max_body_size 8G; # allows file uploads up to 8 Go
                proxy_pass 		http://$target:$file_service_tcp_port;
                break;
        }

	location /printerfiler {
                set $jwt_token          $http_abcauthorization;
                rewrite_by_lua_file /etc/nginx/get.targetmap.lua;
                proxy_pass              http://$target:$printerfile_service_tcp_port;
                break;
        }

	location /u8_1_11025 {
		set $jwt_token          $http_abcauthorization;
                include sound.conf;
                proxy_pass                      http://$target:$pulseaudio_http_port/listen/source/u8_1_11025.monitor;
        }

        location /s16_1_11025 {
		set $jwt_token          $http_abcauthorization;
                include sound.conf;
                proxy_pass                      http://$target:$pulseaudio_http_port/listen/source/s16_1_11025.monitor;
        }

        location /u8_1_22050 {
		set $jwt_token          $http_abcauthorization;
                include sound.conf;
                proxy_pass                      http://$target:$pulseaudio_http_port/listen/source/u8_1_22050.monitor;
        }

        location /s16_1_22050 {
		set $jwt_token          $http_abcauthorization;
                include sound.conf;
                proxy_pass                      http://$target:$pulseaudio_http_port/listen/source/s16_1_22050.monitor;
        }

        location /u8_1_44100 {
		set $jwt_token          $http_abcauthorization;
                include sound.conf;
                proxy_pass                      http://$target:$pulseaudio_http_port/listen/source/u8_1_44100.monitor;
        }

	location /s16_1_44100 {
		set $jwt_token          $http_abcauthorization;
                include sound.conf;
                proxy_pass                      http://$target:$pulseaudio_http_port/listen/source/s16_1_44100.monitor;
        }

 	location /ulaw8_1_8000 {
		set $jwt_token          $http_abcauthorization;
                include sound.conf;
                proxy_pass                      http://$target:$pulseaudio_http_port/listen/source/ulaw8_1_8000.monitor;
        }
  	
	location /alaw8_1_8000 {
		set $jwt_token          $http_abcauthorization;
                include sound.conf;
                proxy_pass                      http://$target:$pulseaudio_http_port/listen/source/alaw8_1_8000.monitor;
        }

	location /broadcast {
                # proxy_read_timeout 	600;
		proxy_read_timeout 	1800s;       # half one hour
  		set $jwt_token          $args;
                if ($arg_jwt_token) {
                        set $jwt_token $arg_jwt_token;
                }
		include    		ws.conf;
                proxy_pass 		http://$target:$broadcast_tcp_port;
        }

	location /speedtest {
		gzip off; #  use raw data for speedtest
		client_max_body_size 256M;
		proxy_buffering off;
		proxy_pass http://$my_speedtest;
	}
	
	location /img/app/ {
                include proxy.conf;
                proxy_pass http://$my_proxy:$api_service_tcp_port;
		break;
        }


        location ~ ^/(moauth|fauth|gauth|oauth|autologin|API|status) {
                # request /API/launchdesktop can take long time 
                # if all pod container images need to be pulled from registry
		# increase default proxy_read_timeout value
		proxy_read_timeout 300s;
                include	proxy.conf;
                proxy_pass http://$my_proxy:$api_service_tcp_port;
		break;
        }
 
